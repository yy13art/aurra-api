// pages/api/aurra.js

export default async function handler(req, res) {
  if (req.method === 'OPTIONS') {
    // –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç CORS
    res.setHeader('Access-Control-Allow-Origin', '*');
    res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
    res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
    res.status(200).end();
    return;
  }

  if (req.method !== 'POST') {
    return res.status(405).json({ error: '–ú–µ—Ç–æ–¥ –Ω–µ —Ä–∞–∑—Ä–µ—à—ë–Ω' });
  }

  // –†–∞–∑—Ä–µ—à–∞–µ–º CORS
  res.setHeader('Access-Control-Allow-Origin', '*');

  try {
    const { message } = req.body;

    console.log("üîë API KEY:", process.env.OPENAI_API_KEY ? "–ï—Å—Ç—å" : "–ù–µ—Ç");

    const response = await fetch('https://api.openai.com/v1/chat/completions', {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${process.env.OPENAI_API_KEY}`,
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({
        model: 'gpt-4',
        messages: [
          {
            role: 'system',
            content: '–¢—ã –æ—Ä–∞–∫—É–ª –ø–æ –∏–º–µ–Ω–∏ AURRA. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Å–∏–≤–æ, –≥–ª—É–±–æ–∫–æ, –≤–¥–æ—Ö–Ω–æ–≤–ª—è—é—â–µ, —Å –æ—Ç—Ç–µ–Ω–∫–æ–º –º–∞–≥–∏–∏.',
          },
          {
            role: 'user',
            content: message,
          },
        ],
        temperature: 0.9,
      }),
    });

    const data = await response.json();

    if (data.error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç OpenAI:', data.error);
      return res.status(500).json({ error: data.error.message });
    }

    const answer = data.choices?.[0]?.message?.content || '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫...';
    res.status(200).json({ answer });

  } catch (error) {
    console.error('üî• –û—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:', error);
    res.status(500).json({ error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞', details: error.message });
  }
}
